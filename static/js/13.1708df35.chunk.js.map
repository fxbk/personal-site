{"version":3,"sources":["pages/projects/q-learning.js"],"names":["PUBLIC_URL","process","q_learning","description","className","id","data-testid","href","src","alt","role","height"],"mappings":"yKAMQA,EAAeC,iBAgDRC,UA5CI,kBACjB,cAAC,IAAD,CACEC,YAAa,uBADf,SAGE,0BAASC,UAAU,OAAOC,GAAG,QAA7B,UACE,iCACE,sBAAKD,UAAU,QAAf,UACE,oBAAIE,cAAY,UAAhB,oCACE,8CAAgB,mBAAGC,KAAK,GAAR,yBAAhB,6DACA,qBAAKH,UAAU,QAAQI,IAAG,UAAKR,EAAL,mCAAkDS,IAAI,oBAGtF,mZAMA,gHAEE,mBAAGF,KAAM,uCAAT,oBAFF,mBAGE,mBAAGA,KAAM,6CAAT,0BAHF,mBAKA,oDACqB,mBAAGA,KAAM,qCAAT,kBADrB,OAGA,yBAAQG,KAAK,QAAb,UACA,gIACE,mCACE,qBAAKN,UAAU,QAAQI,IAAG,UAAKR,EAAL,6BAA4CS,IAAI,SAC1E,wHAEF,mCACE,qBAAKL,UAAU,QAAQI,IAAG,UAAKR,EAAL,oCAAmDS,IAAI,aAAaE,OAAQ,QACtG","file":"static/js/13.1708df35.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\nimport ReactMarkdown from 'react-markdown';\nimport raw from 'raw.macro';\n\nimport Main from '../../layouts/Main';\nconst { PUBLIC_URL } = process.env; // set automatically from package.json:homepage\n\nconst LinkRenderer = ({ ...children }) => <Link {...children} />;\n\nconst q_learning = () => (\n  <Main\n    description={\"Felix Bok's personal\"}\n  >\n    <article className=\"post\" id=\"index\">\n      <header>\n        <div className=\"title\">\n          <h2 data-testid=\"heading\">OpenAI Gym: Q-Learning</h2>\n            <p> Solving the <a href=\"\" >OpenAI Gym </a> environments \"Taxi\" and \"Frozen Lake\" with Q-Learning </p>\n            <img className=\"image\" src={`${PUBLIC_URL}/images/projects/q-learning.jpg`} alt='robo child'/>\n        </div>\n      </header>\n      <p>\n        OpenAI Gym provides different environments and corresponding problems that can be solved using reinforcement\n        learning (RL) techniques. Since I am absolutely fascinated by RL approach, where an agent tries to optimize\n        its reward by random actions and learns which action at which state returns the maximum reward,\n        I started to learn and experiment with RL and OpenAI gym.\n      </p>\n      <p>\n        With the help of Q-Learning, the easiest methods of RL, I was able to solve the\n        <a href={\"https://gym.openai.com/envs/Taxi-v3/\"}> Taxi </a>, as well as the\n        <a href={\"https://gym.openai.com/envs/FrozenLake-v0/\"}> Frozen Lake</a> environment.\n      </p>\n      <p>\n        The repo is linked <a href={\"https://github.com/fxbk/Q_learning\"}>here</a>.\n      </p>\n      <figure role=\"group\">\n      <figcaption>Examples of a trained agent on the taxi and frozen lake environment can be seen below.</figcaption>\n        <figure>\n          <img className=\"image\" src={`${PUBLIC_URL}/images/projects/taxi.gif`} alt=\"taxi\"/>\n          <figcaption>Taxi example, the goal is to pick up a passenger at Y and drop them of at G</figcaption>\n        </figure>\n        <figure>\n          <img className=\"image\" src={`${PUBLIC_URL}/images/projects/frozen-lake.gif`} alt=\"fozen-lake\" height={\"230\"}/>\n          <figcaption>Frozen Lake example, the goal is to get from S to G only using the F fields. The H stands for holes\n          where the agent should walk by (most of the time xD).</figcaption>\n        </figure>\n      </figure>\n\n    </article>\n\n  </Main>\n);\n\nexport default q_learning;"],"sourceRoot":""}