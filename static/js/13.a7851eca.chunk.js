(this["webpackJsonppersonal-site"]=this["webpackJsonppersonal-site"]||[]).push([[13],{167:function(e,n,t){"use strict";t.r(n);var a=t(0),s=t(53),i=(t(1),t(5)),r=t(62),o=t.n(r),c=t(21),h=function(e){var n=Object.assign({},e);return Object(a.jsx)(i.b,Object(s.a)({},n))};n.default=function(){return Object(a.jsx)(c.a,{description:"Felix Bok's personal",children:Object(a.jsxs)("article",{className:"post",id:"index",children:[Object(a.jsx)("header",{children:Object(a.jsxs)("div",{className:"title",children:[Object(a.jsx)("h2",{"data-testid":"heading",children:"OpenAI Gym: Q-Learning"}),Object(a.jsxs)("p",{children:[" Solving the ",Object(a.jsx)("a",{href:"",children:"OpenAI Gym "}),' environments "Taxi" and "Frozen Lake" with Q-Learning ']}),Object(a.jsx)("img",{className:"image",src:"".concat("/personal-site","/images/projects/q-learning.jpg"),alt:"robo child"})]})}),Object(a.jsx)(o.a,{source:"OpenAI Gym provides different environments and corresponding problems that can be solved using reinforcement \nlearning (RL) techniques. Since I am absolutely fascinated by RL approach, where an agent tries to optimize \nits reward by random actions and learns which action at which state returns the maximum reward, \nI started to learn and experiment with RL and OpenAI gym. \n\nWith the help of Q-Learning, the easiest methods of RL, I was able to solve the \n[Taxi](https://gym.openai.com/envs/Taxi-v3/), as well as the\n[Frozen Lake](https://gym.openai.com/envs/FrozenLake-v0/) environment. \n\nThe result of a trained agent on 100k episodes on the taxi environment can be seen below.\n\n![Alt Text](https://github.com/fxbk/personal-site/tree/main/public/images/projects/taxi.gif)",renderers:{Link:h},escapeHtml:!1})]})})}}}]);
//# sourceMappingURL=13.a7851eca.chunk.js.map