{"version":3,"sources":["pages/projects/lux_challenge.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js"],"names":["lux_challenge","description","className","id","data-testid","href","src","process","alt","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread2","target","i","arguments","length","source","forEach","key","getOwnPropertyDescriptors","defineProperties","defineProperty","_defineProperty","obj","value","configurable","writable"],"mappings":"kKA6DeA,UApDO,kBACpB,cAAC,IAAD,CACEC,YAAa,uBADf,SAGE,0BAASC,UAAU,OAAOC,GAAG,QAA7B,UACE,iCACE,sBAAKD,UAAU,QAAf,UACE,oBAAIE,cAAY,UAAhB,qCACE,mDAAqB,mBAAGC,KAAK,uCAAR,sCAArB,2BACA,qBAAKH,UAAU,QAAQI,IAAG,UAbfC,iBAae,sCAAqDC,IAAI,8BAGzF,+CACgB,mBAAGH,KAAM,4CAAT,4BADhB,qaAOA,0FAC2D,mBAAGA,KAAK,mCAAR,0DAD3D,oCAGE,mBAAGA,KAAK,uCAAR,2FAHF,gUAQA,kHAEE,mBAAGA,KAAK,4CAAR,kBAFF,OAIA,oyBAYA,iN,gCCpDN,8CAEA,SAASI,EAAQC,EAAQC,GACvB,IAAIC,EAAOC,OAAOD,KAAKF,GAEvB,GAAIG,OAAOC,sBAAuB,CAChC,IAAIC,EAAUF,OAAOC,sBAAsBJ,GACvCC,IAAgBI,EAAUA,EAAQC,QAAO,SAAUC,GACrD,OAAOJ,OAAOK,yBAAyBR,EAAQO,GAAKE,eAEtDP,EAAKQ,KAAKC,MAAMT,EAAMG,GAGxB,OAAOH,EAGM,SAASU,EAAeC,GACrC,IAAK,IAAIC,EAAI,EAAGA,EAAIC,UAAUC,OAAQF,IAAK,CACzC,IAAIG,EAAyB,MAAhBF,UAAUD,GAAaC,UAAUD,GAAK,GAE/CA,EAAI,EACNf,EAAQI,OAAOc,IAAS,GAAMC,SAAQ,SAAUC,GAC9C,YAAeN,EAAQM,EAAKF,EAAOE,OAE5BhB,OAAOiB,0BAChBjB,OAAOkB,iBAAiBR,EAAQV,OAAOiB,0BAA0BH,IAEjElB,EAAQI,OAAOc,IAASC,SAAQ,SAAUC,GACxChB,OAAOmB,eAAeT,EAAQM,EAAKhB,OAAOK,yBAAyBS,EAAQE,OAKjF,OAAON,I,gCCjCM,SAASU,EAAgBC,EAAKL,EAAKM,GAYhD,OAXIN,KAAOK,EACTrB,OAAOmB,eAAeE,EAAKL,EAAK,CAC9BM,MAAOA,EACPhB,YAAY,EACZiB,cAAc,EACdC,UAAU,IAGZH,EAAIL,GAAOM,EAGND,EAZT","file":"static/js/6.46611d44.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\n\n\nimport Main from '../../layouts/Main';\nconst { PUBLIC_URL } = process.env; // set automatically from package.json:homepage\n\nconst LinkRenderer = ({ ...children }) => <Link {...children} />;\n\nconst lux_challenge = () => (\n  <Main\n    description={\"Felix Bok's personal\"}\n  >\n    <article className=\"post\" id=\"index\">\n      <header>\n        <div className=\"title\">\n          <h2 data-testid=\"heading\">Lux AI Kaggle Challenge</h2>\n            <p> Competing in the <a href=\"https://www.kaggle.com/c/lux-ai-2021\" >Lux AI Kaggle Challenge </a> to apply RL methods </p>\n            <img className=\"image\" src={`${PUBLIC_URL}/images/projects/lux-challenge.png`} alt='lux challenge banner'/>\n        </div>\n      </header>\n      <p>\n        Together with <a href={\"https://www.linkedin.com/in/erik-steiger/\"}> Erik Steiger </a>, a good friend and fellow\n        student of mine, we competed on the Kaggle Challenge \"Lux AI 2021\". The goal of the challenge was to\n        train agents with reinforcement learning methods to enable them to survive in a given environment and doing\n        it better than an opponent. The environment is basically a board game where two players compete about\n        limited resources, building cities and fight against the upcoming dark night.\n      </p>\n      <p>\n        Our idea was to use a Graph Neural Network (GNN) and the <a href=\"https://arxiv.org/abs/1707.06347\">Proximal Policy Optimization (PPO) algorithm</a>.\n        The idea was based on the paper\n        <a href=\"https://arxiv.org/pdf/2107.08387.pdf\">TRAIN ON SMALL, PLAY THE LARGE: SCALING UP BOARD GAMES WITH ALPHAZERO AND GNN</a>,\n        where each node in the GNN represents one position on a board game. As the authors showed, the benefit of using GNN is the\n        possibility of training the node neural network first on a small board game, learning first basic strategies, and then to\n        scale up the board and let the agent learn more complex strategies.\n      </p>\n      <p>\n        We implemented our approach, using PyTorch and RLlib. The repository can be found\n        <a href=\"https://github.com/cerebro-ai/lux-ai-2021\">here</a>.\n      </p>\n      <p>\n        Unfortunately, we fell into a really common RL fallacy.\n        A most common problem with RL is that the code mostly fails silently, meaning that the code is running but the\n        agent does not learn something. Additional, depending on the complexity of the environment, RL takes quite some\n        computational time to start learning something.\n\n        Therefore, it is recommended to test the code on simpler RL problems, f.e. one provided\n        by OpenAI gym and to do a lot of experiments while stepwise increasing the complexity of the algorithm.\n        Unfortunately, we have to learn this the hard way... while we did some tests in the beginning of the project, we\n        at some point were too focused on our idea, that we missed out on testing our idea. And when we noticed that\n        the challenge was almost over.\n      </p>\n      <p>\n        In summary, we really enjoyed working on our first Kaggle challenge and we learned quite a lot.\n        This will definitely not be our only programming project that we will do.\n      </p>\n    </article>\n\n  </Main>\n);\n\nexport default lux_challenge;","import defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}"],"sourceRoot":""}